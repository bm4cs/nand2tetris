// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

// 000000
// 000001
// 000010
// 000011

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],a=ta,b=tb,c=tc,d=td,e=te,f=tf,g=tg,h=th);
    RAM8(in=in,load=ta,address=address[0..2],out=outa);
    RAM8(in=in,load=tb,address=address[0..2],out=outb);
    RAM8(in=in,load=tc,address=address[0..2],out=outc);
    RAM8(in=in,load=td,address=address[0..2],out=outd);
    RAM8(in=in,load=te,address=address[0..2],out=oute);
    RAM8(in=in,load=tf,address=address[0..2],out=outf);
    RAM8(in=in,load=tg,address=address[0..2],out=outg);
    RAM8(in=in,load=th,address=address[0..2],out=outh);
    Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel=address[3..5],out=out);
}
